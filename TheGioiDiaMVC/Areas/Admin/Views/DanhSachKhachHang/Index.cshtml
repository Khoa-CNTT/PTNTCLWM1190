@model X.PagedList.IPagedList<TheGioiDiaMVC.Data.KhachHang>
@using X.PagedList.Mvc.Core


@{
    ViewData["Title"] = "Danh sách đơn hàng";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<h2 class="text-left mb-3" style="color: #A259FF; font-weight: bold; font-family: 'Poppins', sans-serif; text-transform: uppercase;">
    Quản lý khách hàng
</h2>

<!-- #region thông báo -->
@if (TempData["CapNhatHieuLuc"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i> @TempData["CapNhatHieuLuc"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<!-- #endregion -->

<table class="table table-bordered mt-3">
    <thead class="table-primary">
        <tr>
            <th>Tên đăng nhập</th>
            <th>Họ tên</th>
            <th>Địa chỉ</th>
            <th>Điện thoại</th>
            <th>Email</th>
            <th>Trạng thái</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Select((value, i) => new { Value = value, Index = i }))
        {
            <tr class="@(item.Index % 2 == 0 ? "table-light" : "table-secondary")">
                <td>@Html.DisplayFor(modelItem => item.Value.MaKh)</td>
                <td>@Html.DisplayFor(modelItem => item.Value.HoTen)</td>
                <td>@Html.DisplayFor(modelItem => item.Value.DiaChi)</td>
                <td>@Html.DisplayFor(modelItem => item.Value.DienThoai)</td>
                <td>@Html.DisplayFor(modelItem => item.Value.Email)</td>
                <td>
                    @if (item.Value.HieuLuc)
                    {
                        <span class="badge bg-success">Đang hoạt động</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">Bị khoá</span>
                    }
                </td>
                <td>
                    @if (item.Value.HieuLuc)
                    {
                        <a href="@Url.Action("HieuLuc", "DanhSachKhachHang", new { id = item.Value.MaKh, hieuLuc = false })"
                           class="btn btn-warning">Khoá</a>
                    }
                    else
                    {
                        <a href="@Url.Action("HieuLuc", "DanhSachKhachHang", new { id = item.Value.MaKh, hieuLuc = true })"
                           class="btn btn-success">Cấp phép</a>
                    }

                   @*  <a href="@Url.Action("Delete", "DanhSachKhachHang", new { area = "Admin", id = item.Value.MaKh })"
                       class="btn btn-danger" onclick="return confirm('Xoá người dùng này?')">Xoá</a> *@
                </td>
            </tr>
        }
    </tbody>

</table>


<div class="d-flex justify-content-center mt-4">
    <nav>
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })" style="background-color: #7ed321; color: white;">Trước</a>
                </li>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })" style="background-color: #7ed321; color: white;">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })" style="background-color: #7ed321; color: white;">Tiếp</a>
                </li>
            }
        </ul>
    </nav>
</div>

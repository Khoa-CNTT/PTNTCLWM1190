@model X.PagedList.IPagedList<TheGioiDiaMVC.ViewModels.HangHoaVM>
@using X.PagedList.Mvc.Core

@{
	ViewData["Title"] = "Index";
	Layout = "_DanhSachHangHoa";
}

<!-- Single Page Header start -->
@section BreadCum {
	<div class="container-fluid page-header py-5">
		<h1 class="text-center text-white display-6">Shop</h1>
		<ol class="breadcrumb justify-content-center mb-0">
			<li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
			<li class="breadcrumb-item"><a href="#">Trang</a></li>
			<li class="breadcrumb-item active text-white">Shop</li>
		</ol>
	</div>
}
<!-- #region name -->
@if (TempData["ThemGioHang"] != null)
{
	<div class="alert alert-success text-center" role="alert">
		@TempData["ThemGioHang"]
	</div>
	TempData.Remove("ThemGioHang");
}

@if (TempData["CartError"] != null)
{
	<div class="alert alert-warning alert-dismissible fade show mt-3" role="alert">
		@TempData["CartError"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

@if (TempData["HetHang"] != null)
{
	<div class="alert alert-warning alert-dismissible fade show mt-3" role="alert">
		@TempData["HetHang"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

@if (TempData["DangKyThanhCong"] != null)
{
	<div class="alert alert-success text-center" role="alert">
		@TempData["DangKyThanhCong"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

@if (TempData["DangNhapThanhCong"] != null)
{
	<div class="alert alert-success text-center" role="alert">
		@TempData["DangNhapThanhCong"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}
<!-- #endregion -->


<!-- Single Page Header End -->
@await Html.PartialAsync("ProductItem", Model)

@{
	var currentLoai = Context.Request.Query["loai"];
	var currentMaxPrice = Context.Request.Query["maxPrice"];
}

<div class="d-flex justify-content-center mt-3">
	@Html.PagedListPager(Model, page => Url.Action("Index", new { loai = currentLoai, maxPrice = currentMaxPrice, page }),
			new PagedListRenderOptions
	{
		LiElementClasses = new[] { "page-item d-inline-block mx-1" },
		PageClasses = new[] { "page-link" }
	})
</div>